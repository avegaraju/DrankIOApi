AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  UserPoolName:
    Type: String
    Description: Name for the Cognito User Pool
  GoogleClientId:
    Type: String
    Description: Google Client ID for Federation
  GoogleAuthorizeScopes:
    Type: String
    Description: OAuth 2.0 scopes
    Default: 'openid profile email'
  GoogleClientSecret:
    Type: String
    Description: Client secret for Google
Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref UserPoolName
      AutoVerifiedAttributes:
        - email
      MfaConfiguration: 'OFF'
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: "DrankIOAppClient"
      UserPoolId: !Ref CognitoUserPool
      GenerateSecret: false
      CallbackURLs:
        - http://localhost:3000
  
  CognitoIdentityProviderGoogle:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      ProviderName: "Google"
      ProviderType: "Google"
      UserPoolId: !Ref CognitoUserPool
      ProviderDetails:
        client_id: !Ref GoogleClientId
        client_secret: !Ref GoogleClientSecret
        authorize_scopes: !Ref GoogleAuthorizeScopes
      AttributeMapping:
        email: 'email'
        name: 'name'
        given_name: 'given_name'
        family_name: 'family_name'
